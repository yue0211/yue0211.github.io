<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Leetcode-30-Substring with Concatenation of All Words</title>
      <link href="/post/Leetcode/30/substring-with-concatenation-of-all-words/"/>
      <url>/post/Leetcode/30/substring-with-concatenation-of-all-words/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p>You are given a string s and an array of strings words. All the strings of words are of the same length.</p><p>A concatenated string is a string that exactly contains all the strings of any permutation of words concatenated.</p><ul><li>For example, if words &#x3D; [“ab”,”cd”,”ef”], then “abcdef”, “abefcd”, “cdabef”, “cdefab”, “efabcd”, and “efcdab” are all concatenated strings. “acdbef” is not a concatenated string because it is not the concatenation of any permutation of words.</li></ul><p>Return an array of the starting indices of all the concatenated substrings in s. You can return the answer in any order.</p><p><a href="https://leetcode.com/problems/substring-with-concatenation-of-all-words/description/">題目連結</a></p><p><strong>Example 1</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Input: s = &quot;barfoothefoobarman&quot;, words = [&quot;foo&quot;,&quot;bar&quot;]</span><br><span class="line"></span><br><span class="line">Output: [0,9]</span><br><span class="line"></span><br><span class="line">Explanation:</span><br><span class="line"></span><br><span class="line">The substring starting at 0 is &quot;barfoo&quot;. It is the concatenation of [&quot;bar&quot;,&quot;foo&quot;] which is a permutation of words.</span><br><span class="line">The substring starting at 9 is &quot;foobar&quot;. It is the concatenation of [&quot;foo&quot;,&quot;bar&quot;] which is a permutation of words.</span><br></pre></td></tr></table></figure><p><strong>Example 2</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Input: s = &quot;wordgoodgoodgoodbestword&quot;, words = [&quot;word&quot;,&quot;good&quot;,&quot;best&quot;,&quot;word&quot;]</span><br><span class="line"></span><br><span class="line">Output: []</span><br><span class="line"></span><br><span class="line">Explanation:</span><br><span class="line"></span><br><span class="line">There is no concatenated substring.</span><br></pre></td></tr></table></figure><p><strong>Example 3</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Input: s = &quot;barfoofoobarthefoobarman&quot;, words = [&quot;bar&quot;,&quot;foo&quot;,&quot;the&quot;]</span><br><span class="line"></span><br><span class="line">Output: [6,9,12]</span><br><span class="line"></span><br><span class="line">Explanation:</span><br><span class="line"></span><br><span class="line">The substring starting at 6 is &quot;foobarthe&quot;. It is the concatenation of [&quot;foo&quot;,&quot;bar&quot;,&quot;the&quot;].</span><br><span class="line">The substring starting at 9 is &quot;barthefoo&quot;. It is the concatenation of [&quot;bar&quot;,&quot;the&quot;,&quot;foo&quot;].</span><br><span class="line">The substring starting at 12 is &quot;thefoobar&quot;. It is the concatenation of [&quot;the&quot;,&quot;foo&quot;,&quot;bar&quot;].</span><br></pre></td></tr></table></figure><h2 id="解釋題目"><a href="#解釋題目" class="headerlink" title="解釋題目"></a>解釋題目</h2><p>題目會給一個 string array words，words 內的每個字串的長度都相同。</p><p>permutation words 的定義是<code>words 內的每個字串任意排列，但字元之間不能任意排列</code>。</p><ul><li>Ex: words &#x3D; [“foo”,”bar”]</li><li>permutation words &#x3D; foobar, barfoo</li><li><code>not</code> permutation words &#x3D; bafoor</li></ul><p>題目還會給一個 string s，在 s 內找到所有 permutation words 的 <code>起始位置</code>。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li>i 是左指針，記錄當前尋找的 permutation words 的 <code>起始位置</code>。</li><li>j 是右指針，尋找可能的答案。</li><li>Table 記錄 words 中，每個 string 出現的次數。</li><li>COUNT 記錄 words 中總共有幾個 string。</li></ol><h2 id="圖解"><a href="#圖解" class="headerlink" title="圖解"></a>圖解</h2><p><strong>外層迴圈，設成 words[0].size() 的原因 :</strong><br><img src="/post/Leetcode/30/substring-with-concatenation-of-all-words/image.webp" alt="迴圈設N"></p><p><strong>程式主要邏輯 :</strong><br><img src="/post/Leetcode/30/substring-with-concatenation-of-all-words/image2.webp" alt="主要邏輯"></p><h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">findSubstring</span><span class="params">(string s, vector&lt;string&gt;&amp; words)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> N = words[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> COUNT = words.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; result;</span><br><span class="line">        unordered_map&lt;string, <span class="type">int</span>&gt; Table;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> word: words)</span><br><span class="line">            Table[word]++;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> start = <span class="number">0</span>; start &lt; N; start++)&#123; <span class="comment">// 迴圈這樣設，可以覆蓋到所有例子，不懂可以看圖解</span></span><br><span class="line">            <span class="type">int</span> i = start; <span class="comment">// 左指針</span></span><br><span class="line">            <span class="type">int</span> j = i; <span class="comment">//右指針</span></span><br><span class="line">            <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">            unordered_map&lt;string, <span class="type">int</span>&gt; Map;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(j &lt; s.<span class="built_in">size</span>())&#123;</span><br><span class="line">                <span class="keyword">if</span>(Table.<span class="built_in">find</span>(s.<span class="built_in">substr</span>(j, N)) == Table.<span class="built_in">end</span>())&#123;</span><br><span class="line">                    j += N;</span><br><span class="line">                    i = j;</span><br><span class="line">                    Map.<span class="built_in">clear</span>();</span><br><span class="line">                    count = <span class="number">0</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(Map[s.<span class="built_in">substr</span>(j, N)] &lt; Table[s.<span class="built_in">substr</span>(j, N)])&#123;</span><br><span class="line">                    Map[s.<span class="built_in">substr</span>(j, N)] += <span class="number">1</span>;</span><br><span class="line">                    j += N;</span><br><span class="line">                    count += <span class="number">1</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(Map[s.<span class="built_in">substr</span>(j, N)] == Table[s.<span class="built_in">substr</span>(j, N)])&#123;</span><br><span class="line">                    Map[s.<span class="built_in">substr</span>(i, N)] -= <span class="number">1</span>;</span><br><span class="line">                    i += N;</span><br><span class="line">                    count -= <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(count == COUNT)&#123;</span><br><span class="line">                    result.<span class="built_in">push_back</span>(i);</span><br><span class="line">                    Map[s.<span class="built_in">substr</span>(i, N)] -= <span class="number">1</span>;</span><br><span class="line">                    i += N;</span><br><span class="line">                    count -= <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Two Pointers </tag>
            
            <tag> 官神題目 </tag>
            
            <tag> Hard </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to build website on Docker with wordpress backup file</title>
      <link href="/post/docker-wordpress/"/>
      <url>/post/docker-wordpress/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="你誰~ 別想偷看" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="6c33ff9ef3a56b436f7c1f85ee7155ec44326440543459faa9e30c25b94f1b81"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">實驗室網頁建構</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> wordpress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Leetcode-18-4Sum</title>
      <link href="/post/Leetcode/18/4Sum/"/>
      <url>/post/Leetcode/18/4Sum/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p>Given an array nums of n integers, return an array of all the unique quadruplets [nums[a], nums[b], nums[c], nums[d]] such that:</p><ul><li>0 &lt;&#x3D; a, b, c, d &lt; n</li><li>a, b, c, and d are distinct.</li><li>nums[a] + nums[b] + nums[c] + nums[d] &#x3D;&#x3D; target</li></ul><p>You may return the answer in any order.</p><p><a href="https://leetcode.com/problems/4sum/description/">題目連結</a></p><p><strong>Example 1</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: nums = [1,0,-1,0,-2,2], target = 0</span><br><span class="line">Output: [[-2,-1,1,2],[-2,0,0,2],[-1,0,0,1]]</span><br></pre></td></tr></table></figure><p><strong>Example 2</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: nums = [2,2,2,2,2], target = 8</span><br><span class="line">Output: [[2,2,2,2]]</span><br></pre></td></tr></table></figure><h2 id="解釋題目"><a href="#解釋題目" class="headerlink" title="解釋題目"></a>解釋題目</h2><p>題目會給一個 integer array nums，和一個 integer targets。</p><p>在 nums 內，找四個元素: <code>[nums[a], nums[b], nums[c], nums[d]]</code>，a、b、c、d 不相等，且<code>nums[a] + nums[b] + nums[c] + nums[d] == target</code>。</p><p>這種<code>四元素</code>可能會有很多個，回傳所有可能，但不要回傳重複的答案。</p><p>這題跟 <a href="/post/Leetcode/15/3Sum">Leetcode-15</a> 很像。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li>先排序 nums，之後做雙指針比較好處理。</li><li>固定<code>前兩個元素(i、j)</code>，再利用雙指針，找到剩下符合題意的元素。(和 3Sum 相同)</li><li>為了避免重複，確認發現了一組解之後，再移動 left 和 right 指針，略過重複項。</li></ol><h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">fourSum</span>(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> target) &#123;</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; result;</span><br><span class="line">        <span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; nums.<span class="built_in">size</span>(); i++)&#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; nums.<span class="built_in">size</span>(); j++)&#123;</span><br><span class="line">                <span class="type">int</span> left = j + <span class="number">1</span>;</span><br><span class="line">                <span class="type">int</span> right = nums.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">while</span>(left &lt; right)&#123;</span><br><span class="line">                    <span class="comment">// 要用 long long，否則會 overflow</span></span><br><span class="line">                    <span class="type">long</span> <span class="type">long</span> sum = (<span class="type">long</span> <span class="type">long</span>)nums[i] + nums[j] + nums[left] + nums[right];</span><br><span class="line">                    <span class="keyword">if</span>(sum == target)&#123;</span><br><span class="line">                        result.<span class="built_in">push_back</span>(&#123;nums[i], nums[j], nums[left], nums[right]&#125;);</span><br><span class="line">                        left++;</span><br><span class="line">                        right--;</span><br><span class="line">                        </span><br><span class="line">                        <span class="comment">// 避免重複項</span></span><br><span class="line">                        <span class="keyword">while</span>(left&lt;right &amp;&amp; nums[left] == nums[left<span class="number">-1</span>]) left++;</span><br><span class="line">                        <span class="keyword">while</span>(left&lt;right &amp;&amp; nums[right] == nums[right<span class="number">+1</span>]) right--;</span><br><span class="line">                    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(sum &lt; target)</span><br><span class="line">                        left++;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(sum &gt; target)</span><br><span class="line">                        right--;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 避免重複項</span></span><br><span class="line">                <span class="keyword">while</span>(j<span class="number">+1</span>&lt;nums.<span class="built_in">size</span>() &amp;&amp; nums[j<span class="number">+1</span>]==nums[j]) j++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 避免重複項</span></span><br><span class="line">            <span class="keyword">while</span>(i<span class="number">+1</span>&lt;nums.<span class="built_in">size</span>() &amp;&amp; nums[i<span class="number">+1</span>]==nums[i]) i++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// target: 0</span></span><br><span class="line"><span class="comment">// -2, -1, 0, 0, 1, 2 </span></span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://www.youtube.com/watch?v=oACoT4c_Tig">贾考博 LeetCode</a></p>]]></content>
      
      
      <categories>
          
          <category> Leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Medium </tag>
            
            <tag> Two Pointers </tag>
            
            <tag> 官神題目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Leetcode-16-3Sum-Closest</title>
      <link href="/post/Leetcode/16/3Sum-Closest/"/>
      <url>/post/Leetcode/16/3Sum-Closest/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p>Given an integer array nums of length n and an integer target, find three integers in nums such that the sum is closest to target.</p><p>Return the sum of the three integers.</p><p>You may assume that each input would have exactly one solution.</p><p><a href="https://leetcode.com/problems/3sum-closest/description/">題目連結</a></p><p><strong>Example 1</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: nums = [-1,2,1,-4], target = 1</span><br><span class="line">Output: 2</span><br><span class="line">Explanation: The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).</span><br></pre></td></tr></table></figure><p><strong>Example 2</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: nums = [0,0,0], target = 1</span><br><span class="line">Output: 0</span><br><span class="line">Explanation: The sum that is closest to the target is 0. (0 + 0 + 0 = 0).</span><br></pre></td></tr></table></figure><h2 id="解釋題目"><a href="#解釋題目" class="headerlink" title="解釋題目"></a>解釋題目</h2><p>題目會給一個 integer array nums，和一個 integer targets。</p><p>在 nums 中找三個整數，這三個整數的總和，要最接近 target。</p><p>回傳<code>三個整數的總和</code>。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li>先排序 nums，之後做雙指針比較好處理。</li><li>固定一項元素，再利用雙指針，找剩下的兩個元素，目標是<code>三個元素的總和最接近 target</code>。</li><li>如果 target 和 新計算的 sum <code>之間的距離有更小</code>，則更新 result。</li><li>如果新計算的 sum ，比 target 小，則 left++ &#x3D;&gt; <code>讓新計算的 sum 會更大，越接近 target</code> </li><li>如果新計算的 sum ，比 target 大，則 right– &#x3D;&gt; <code>讓新計算的 sum 會更小，越接近 target</code></li></ol><p>這題跟 <a href="/post/Leetcode/15/3Sum">Leetcode-15</a> 很像。</p><h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">threeSumClosest</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>());</span><br><span class="line">        <span class="type">int</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> distance = INT_MAX;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; nums.<span class="built_in">size</span>(); i++)&#123;</span><br><span class="line">            <span class="type">int</span> fix = nums[i];</span><br><span class="line">            <span class="type">int</span> left = i + <span class="number">1</span>;</span><br><span class="line">            <span class="type">int</span> right = nums.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(left &lt; right)&#123;</span><br><span class="line">                <span class="type">int</span> sum = fix + nums[left] + nums[right];</span><br><span class="line">                <span class="keyword">if</span>(distance &gt; <span class="built_in">abs</span>(target-sum))&#123;</span><br><span class="line">                    distance = <span class="built_in">abs</span>(target-sum);</span><br><span class="line">                    result = sum;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(sum &lt;= target)</span><br><span class="line">                    left++;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    right--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// target: 1</span></span><br><span class="line"><span class="comment">// -4, -1, 1, 2</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Medium </tag>
            
            <tag> Two Pointers </tag>
            
            <tag> 官神題目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Leetcode-15-3Sum</title>
      <link href="/post/Leetcode/15/3Sum/"/>
      <url>/post/Leetcode/15/3Sum/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p>Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i !&#x3D; j, i !&#x3D; k, and j !&#x3D; k, and nums[i] + nums[j] + nums[k] &#x3D;&#x3D; 0.</p><p>Notice that the solution set must not contain duplicate triplets.</p><p><a href="https://leetcode.com/problems/3sum/description/?envType=list&envId=xoqag3yj">題目連結</a></p><p><strong>Example 1</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Input: nums = [-1,0,1,2,-1,-4]</span><br><span class="line">Output: [[-1,-1,2],[-1,0,1]]</span><br><span class="line">Explanation: </span><br><span class="line">nums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0.</span><br><span class="line">nums[1] + nums[2] + nums[4] = 0 + 1 + (-1) = 0.</span><br><span class="line">nums[0] + nums[3] + nums[4] = (-1) + 2 + (-1) = 0.</span><br><span class="line">The distinct triplets are [-1,0,1] and [-1,-1,2].</span><br><span class="line">Notice that the order of the output and the order of the triplets does not matter.</span><br></pre></td></tr></table></figure><p><strong>Example 2</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: nums = [0,1,1]</span><br><span class="line">Output: []</span><br><span class="line">Explanation: The only possible triplet does not sum up to 0.</span><br></pre></td></tr></table></figure><p><strong>Example 3</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: nums = [0,0,0]</span><br><span class="line">Output: [[0,0,0]]</span><br><span class="line">Explanation: The only possible triplet sums up to 0.</span><br></pre></td></tr></table></figure><h2 id="解釋題目"><a href="#解釋題目" class="headerlink" title="解釋題目"></a>解釋題目</h2><p>題目會給一個 integer array nums。</p><p>在 nums 內，找三個元素: <code>[nums[i], nums[j], nums[k]]</code>，i、j、k 不相等，且<code>nums[i] + nums[j] + nums[k] == 0</code>。</p><p>這種<code>三元素</code>可能會有很多個，回傳所有可能，但不要回傳重複的答案。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li>先排序 nums，之後做雙指針比較好處理。</li><li>固定一項元素，並設成負數。再利用雙指針，找到剩下符合題意的元素。<ul><li>Ex: nums[i] &#x3D; 5 &#x3D;&gt; -5 <code>固定的元素</code></li><li>利用雙指針找到 <code>nums[j] + nums[k] = -5</code> &#x3D;&gt; <code>nums[i] + nums[j] + nums[k] == 0</code>。</li></ul></li><li>為了避免重複，確認發現了一組解之後，再移動 left 和 right 指針，略過重複項。</li></ol><h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">threeSum</span>(vector&lt;<span class="type">int</span>&gt;&amp; nums) &#123;</span><br><span class="line">        <span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>());</span><br><span class="line"></span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; result;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; nums.<span class="built_in">size</span>(); i++)&#123;</span><br><span class="line">            <span class="type">int</span> fix = -nums[i];</span><br><span class="line">            <span class="type">int</span> left = i + <span class="number">1</span>;</span><br><span class="line">            <span class="type">int</span> right = nums.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(left &lt; right)&#123;</span><br><span class="line">                <span class="keyword">if</span>(nums[left] + nums[right] == fix)&#123;</span><br><span class="line">                    vector&lt;<span class="type">int</span>&gt; temp&#123;nums[i], nums[left], nums[right]&#125;;</span><br><span class="line">                    result.<span class="built_in">push_back</span>(temp);</span><br><span class="line">                    left++;</span><br><span class="line">                    right--;</span><br><span class="line">                    <span class="comment">// 避免重複項，記得檢查邊界</span></span><br><span class="line">                    <span class="keyword">while</span>(left&lt;right &amp;&amp; nums[left]==nums[left<span class="number">-1</span>]) left++;</span><br><span class="line">                    <span class="keyword">while</span>(left&lt;right &amp;&amp; nums[right]==nums[right<span class="number">+1</span>]) right--;</span><br><span class="line"></span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(nums[left] + nums[right] &gt; fix) <span class="comment">// 代表總和太大</span></span><br><span class="line">                    right--;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(nums[left] + nums[right] &lt; fix) <span class="comment">// 代表總和太小</span></span><br><span class="line">                    left++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 避免重複項，記得檢查邊界</span></span><br><span class="line">            <span class="keyword">while</span>(i<span class="number">+1</span> &lt; nums.<span class="built_in">size</span>() &amp;&amp; nums[i] == nums[i<span class="number">+1</span>])</span><br><span class="line">                i++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Medium </tag>
            
            <tag> Two Pointers </tag>
            
            <tag> 官神題目 </tag>
            
            <tag> Two Pointers 基本題 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Leetcode-11-Container-With-Most-Water</title>
      <link href="/post/Leetcode/11/Container-With-Most-Water/"/>
      <url>/post/Leetcode/11/Container-With-Most-Water/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p>You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).</p><p>Find two lines that together with the x-axis form a container, such that the container contains the most water.</p><p>Return the maximum amount of water a container can store.</p><p>Notice that you may not slant the container.</p><p><a href="https://leetcode.com/problems/container-with-most-water/description/?envType=list&envId=xoqag3yj">題目連結</a></p><p><img src="/post/Leetcode/11/Container-With-Most-Water/%E9%A1%8C%E7%9B%AE%E5%9C%96.webp" alt="題目圖"></p><p><strong>Example 1</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: height = [1,8,6,2,5,4,8,3,7]</span><br><span class="line">Output: 49</span><br><span class="line">Explanation: The above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. In this case, the max area of water (blue section) the container can contain is 49.</span><br></pre></td></tr></table></figure><p><strong>Example 2</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: height = [1,1]</span><br><span class="line">Output: 1</span><br></pre></td></tr></table></figure><h2 id="解釋題目"><a href="#解釋題目" class="headerlink" title="解釋題目"></a>解釋題目</h2><p>height 是一個 integer array，每一個元素代表一個線段的高度。</p><p>任意兩條線段，沿著 X 軸方向，可以假想成一個容器，容器不能傾斜。</p><p>求容器最大能容納的水量。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li>Initial: 左指針指向最前面的 height，右指針指向最後面的 height。</li><li>開始計算水量，記錄最大水量。</li><li>若左邊的高度較矮，左指針就右移。若右邊的高度較矮，右指針就左移。移完指針後，回到第二步。</li><li>透過 Two Pointers，就能把所有狀況跑一遍。</li></ol><h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">maxArea</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; height)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> left = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> right = height.<span class="built_in">size</span>() - <span class="number">1</span>; </span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(left &lt; right)&#123;</span><br><span class="line">            <span class="type">int</span> area = (right - left) * <span class="built_in">min</span>(height[left], height[right]);</span><br><span class="line">            result = <span class="built_in">max</span>(result, area);</span><br><span class="line">            <span class="keyword">if</span>(height[left] &lt;= height[right])</span><br><span class="line">                left++;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                right--;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Medium </tag>
            
            <tag> Two Pointers </tag>
            
            <tag> 官神題目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>set windows remote mode on windows pro</title>
      <link href="/post/windows-pro-remote/"/>
      <url>/post/windows-pro-remote/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="啟用-windows-pro"><a href="#啟用-windows-pro" class="headerlink" title="啟用 windows pro"></a>啟用 windows pro</h2><p>按照此<a href="https://github.com/massgravel/Microsoft-Activation-Scripts">github</a>的教學，升級成 windows pro</p><h2 id="Step-1-啟用遠端桌面"><a href="#Step-1-啟用遠端桌面" class="headerlink" title="Step 1. 啟用遠端桌面"></a>Step 1. 啟用遠端桌面</h2><ul><li>進入設定頁面。</li><li>點擊 系統 → 遠端桌面。</li><li>將「啟用遠端桌面」切換為 開，並按下 確認。</li><li>電腦名稱會顯示在此處，記下來以供日後連線使用。</li></ul><h2 id="Step-2-允許遠端桌面通過防火牆"><a href="#Step-2-允許遠端桌面通過防火牆" class="headerlink" title="Step 2. 允許遠端桌面通過防火牆"></a>Step 2. 允許遠端桌面通過防火牆</h2><ul><li>進入控制台，點擊系統及安全性 → Windows Defender 防火牆。</li><li>點擊 允許應用或功能通過 Windows Defender 防火牆。</li><li>找到「遠端桌面」，確保「私人」和「公用」網路都已勾選。</li></ul><h2 id="Step-3-設定-DHCP"><a href="#Step-3-設定-DHCP" class="headerlink" title="Step 3. 設定 DHCP"></a>Step 3. 設定 DHCP</h2><ul><li>允許自動從路由器或 DHCP 伺服器獲取 IP 位址。</li><li>進入設定頁面，點選網路和網際網路。</li><li>將 IP指派和伺服器指派，設成自動。</li></ul><h2 id="Step-4-跨網路連線（設置端口轉發）-Port-Forwarding"><a href="#Step-4-跨網路連線（設置端口轉發）-Port-Forwarding" class="headerlink" title="Step 4. 跨網路連線（設置端口轉發）(Port Forwarding)"></a>Step 4. 跨網路連線（設置端口轉發）(Port Forwarding)</h2><ul><li>進入路由器管理介面，「預設閘道」的 IP 位址，打在Google。</li><li>使用者名稱：admin，密碼: password (可修改，Hitron)</li><li>查詢電腦的內網 IP (可能會一直變，路由器指派的)(動態IP): ipconfig ，有變化的話需要去管理介面重新設定。<ul><li>解法 : 將<code>IPv4</code>變成<code>靜態IP</code>，將<code>IP指派</code>設成<code>手動指派</code>。</li><li><img src="/post/windows-pro-remote/image.webp" alt="image"></li><li>填寫電腦的 IP 位址(IPv4)。</li><li>填寫子網路遮罩。</li><li>填寫預設閘道(路由器內網IP地址)。</li><li>填寫慣用的 DNS(路由器內網IP地址)。</li></ul></li><li>端口轉發要填的內容如下:<br><img src="/post/windows-pro-remote/image2.webp" alt="image"></li><li>Protocol 選擇TCP 或 TCP&#x2F;UDP。</li><li>Public Port Range 設定範圍為 3389 ~ 3389，如果希望提高安全性，您可以將外部端口更改為非預設端口，例如 40000 ~ 40000。</li><li>Private Port Range 設定範圍為 3389 ~ 3389。內部端口一定要使用遠端桌面的預設端口（3389），否則無法正常連線。</li><li>Local IP Address 是電腦內網的靜態IP(IPv4)。</li></ul><h2 id="Step-5-連線"><a href="#Step-5-連線" class="headerlink" title="Step 5. 連線"></a>Step 5. 連線</h2><ul><li>使用<a href="https://whatismyipaddress.com/">路由器的外網IP</a>登入，而不是路由器的內網IP(預設閘道)。</li><li>路由器的外網IP也會動態變動，若要固定需要花錢買路由器外網IP域名。</li><li>免費的話可以使用<a href="https://www.noip.com/">No-IP(DDNS)</a>，即使外網 IP 變動，域名會自動更新到新的外網 IP。。</li><li>帳號：目標電腦的使用者名稱。(可輸入whoami查詢)</li><li>密碼：該帳號的登入密碼。</li></ul><h2 id="Step-6-補充"><a href="#Step-6-補充" class="headerlink" title="Step 6. (補充)"></a>Step 6. (補充)</h2><ul><li>若不能連線，記得重開路由器。</li><li><a href="https://medium.com/@fortunatemaker2603/ssh-%E9%81%A0%E7%AB%AF%E9%80%A3%E7%B7%9A%E5%9B%9E%E5%AE%B6%E4%B8%AD%E7%9A%84-windows-%E9%9B%BB%E8%85%A6-7e5267ae1e93">windows ssh 教學</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> install </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Indexing Sort</title>
      <link href="/post/indexing-sort/"/>
      <url>/post/indexing-sort/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="Indexing-Sort"><a href="#Indexing-Sort" class="headerlink" title="Indexing Sort"></a>Indexing Sort</h2><ul><li>有一堆數字，數字的值介於 1~n 之間，數字的個數大概在 n 附近。</li><li>盡最大努力做排序，讓 nums[index] &#x3D; index。</li><li>若排序後，仍有 nums[index] !&#x3D; index 非常有可能是問題的答案。</li></ul><h2 id="目標"><a href="#目標" class="headerlink" title="目標"></a>目標</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">index 1 2 3 ... n n+1 (n+1個數)</span><br><span class="line">value 1 2 3 ... n 6 (值介於1~n)</span><br></pre></td></tr></table></figure><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">index 1 2 3 4 5 .... n-1 n n+1</span><br><span class="line">ex:   1 3 5 4 2</span><br><span class="line">      1 5 3 4 2  (走到 index 2, 將 value 3 送到正確的位置(index 3) =&gt; 3、5 對調</span><br><span class="line">      1 2 3 4 5  (走到 index 2, 將 value 5 送到正確的位置(index 5) =&gt; 5、2 對調</span><br><span class="line"></span><br><span class="line">index 1 2 3 4 5 6 7 8 ... n-1 n n+1</span><br><span class="line">ex:   1 2 3 4 5 8   8</span><br><span class="line">      1 2 3 4 5 8   8 (走到 index 6, 不用交換 =&gt; 已盡最大努力了, 無法交換</span><br></pre></td></tr></table></figure><h2 id="程式"><a href="#程式" class="headerlink" title="程式"></a>程式</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n = nums.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line">nums.<span class="built_in">insert</span>(nums.<span class="built_in">begin</span>(), <span class="number">0</span>); <span class="comment">// 避免 index 錯位</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// nums[i]&lt;=n+1 =&gt; nums 多一位，所以nums[i]的範圍也要變化</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n<span class="number">+1</span>; i++)&#123;</span><br><span class="line">    <span class="keyword">while</span>(nums[i]!=i &amp;&amp; nums[i]&lt;=n<span class="number">+1</span> &amp;&amp; nums[i]!=nums[nums[i]])</span><br><span class="line">        <span class="built_in">swap</span>(nums[i], nums[nums[i]]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="補充"><a href="#補充" class="headerlink" title="補充"></a>補充</h2><p><img src="/post/indexing-sort/image.webp" alt="筆記"></p>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Indexing Sort </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Quick Select</title>
      <link href="/post/quickSelect/"/>
      <url>/post/quickSelect/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="Quick-Select"><a href="#Quick-Select" class="headerlink" title="Quick Select"></a>Quick Select</h2><ul><li>找 K-th element</li><li>時間複雜度: 平均 O(N)</li></ul><h2 id="目標"><a href="#目標" class="headerlink" title="目標"></a>目標</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">     pivot</span><br><span class="line">S S S O O L L L L L</span><br><span class="line"></span><br><span class="line">S: 小於 pivot 的數</span><br><span class="line">O: 等於 pivot 的數</span><br><span class="line">L: 大於 pivot 的數 </span><br></pre></td></tr></table></figure><h2 id="過程"><a href="#過程" class="headerlink" title="過程"></a>過程</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">S S S O O X X X X L L L L L</span><br><span class="line">      i   t     j</span><br><span class="line"></span><br><span class="line">i: 指向 S 的後一個數</span><br><span class="line">j: 指向 L 的前一個數</span><br><span class="line">t: 指向未知的數</span><br></pre></td></tr></table></figure><h2 id="分堆後"><a href="#分堆後" class="headerlink" title="分堆後"></a>分堆後</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">S S S O O O L L L L L</span><br><span class="line">a     i   j         b</span><br><span class="line"></span><br><span class="line">if(b-j &gt;= k) =&gt; find k-th largest in [L]</span><br><span class="line">else if(b-i+1 &gt;= k) =&gt; k-th largest is pivot</span><br><span class="line">else =&gt; find &quot;k-(b-i+1) th&quot; largest in [S]</span><br></pre></td></tr></table></figure><h2 id="程式"><a href="#程式" class="headerlink" title="程式"></a>程式</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">quickSelect</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> pivot = nums[(a+b)/<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = a, j = b;</span><br><span class="line">    <span class="type">int</span> t = a;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(t &lt;= j)&#123;</span><br><span class="line">        <span class="keyword">if</span>(nums[t] &lt; pivot)&#123;</span><br><span class="line">            <span class="built_in">swap</span>(nums[i], nums[t]);</span><br><span class="line">            i++;</span><br><span class="line">            t++;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(nums[t] &gt; pivot)&#123;</span><br><span class="line">            <span class="built_in">swap</span>(nums[t], nums[j]);</span><br><span class="line">            j--;</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">            t++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(b-j &gt;= k)    </span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">quickSelect</span>(nums, j<span class="number">+1</span>, b, k);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(b-i<span class="number">+1</span> &gt;= k)</span><br><span class="line">        <span class="keyword">return</span> pivot;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">quickSelect</span>(nums, a, i<span class="number">-1</span>, k-(b-i<span class="number">+1</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="補充"><a href="#補充" class="headerlink" title="補充"></a>補充</h2><p>call API</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">findKthLargest</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">    <span class="comment">// nth_element 可用於求第 n 小的數 =&gt; 由小到大排</span></span><br><span class="line">    <span class="comment">// 第 k 大的數 =&gt; 第 n-k 小</span></span><br><span class="line">    <span class="comment">// nth_element 會將第n-k小的數，放在nums.begin()+n-k</span></span><br><span class="line">    <span class="comment">// 保證小於等於 nums.begin()+n-k 的數都在前面</span></span><br><span class="line">    <span class="comment">// 保證大於等於 nums.begin()+n-k 的數都在後面</span></span><br><span class="line">    <span class="built_in">nth_element</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">begin</span>()+n-k, nums.<span class="built_in">end</span>());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> *(nums.<span class="built_in">begin</span>()+n-k);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Quick Select </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Secret Information</title>
      <link href="/post/secret/"/>
      <url>/post/secret/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="你誰~ 別想偷看" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="f7771a465cf6c3ff27ffe48b75bccd4870df9ea52dd7f82e494298f5365ef99b">4af8291d7d4bfe809382abee478622f759871065b564e7e8d697ddbc4937d6542cc67284e4face7fa79b2a8c725845a158cc817bc80158e854eede40a46f96d65f87ad4f46c2ca35fabcdf2bbfad46ec8fb79491066e19a7eb25363581dee34b1bc68411833bcb8e3772025f464b3c2baef35815040021c5437576c9804f90dbcdd6a995c7d51f5643e7936e9eed2f55cce9847f9bd269d9786d5c040c5ab2ac839f2b31733da853cb22958a9cac23956b0674561baea8849747265e8e314f361434a625887c83e36d6d44b1a32ea85a8e56d0d3a6559d64337ef587320e4b8cecca8b66f3b9f4d990380cf2979013ee848a21914ef20e70dd3c667761f25475aabf229202ed060d5497808bb3d8796d500beb2fab25fac2f503befefdc3b1a0a670fb6edd8d9517c11a893d152b66f826dcc24297a83ad4ca412ec4f1b9d96460457650c7abe9646e74f22fb7590ff7d01e4fc8487e56192668cc64d1dc07776bf98f594b8498c1bfa024d5b5dd7a20454007fec60a208168712af5c036aa7d322b4b7b59f145862c0018b0673211be75a7ab3d0543805d0bfa063bb1182f515c3f4b40e8dc8498a79b8d023e3eb48b1cfd23c4bd507946079b5abb178d4cced589c41c70200d6a35f7174a07ee1e372adf25bbc51fdca7db6e9e4355c1d4f32bd3a6b3c6ead3766d5c04b73dc20460ae790dc6a2e100ff3dd8e1e33bbc08cd15a6a49b27794b8d901fe82064b3a53da7db32b3b4c9d35dd7ce23e12f8dfadfe4010e1ef0e2eed52eb7e2c4e27ccd3b6ed1b251709fe69ae4949acc55445a89</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">莫忘初衷</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> secret </category>
          
      </categories>
      
      
        <tags>
            
            <tag> first </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Set Hexo Theme ButterFly</title>
      <link href="/post/set-hexo-butterfly/"/>
      <url>/post/set-hexo-butterfly/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="Set-Hexo-Environment-Link-To-Github"><a href="#Set-Hexo-Environment-Link-To-Github" class="headerlink" title="Set Hexo Environment Link To Github"></a>Set Hexo Environment Link To Github</h2><p><a href="https://ed521.github.io/2019/07/hexo-install/">參考連結</a></p><h2 id="Set-Butterfly-Environment"><a href="#Set-Butterfly-Environment" class="headerlink" title="Set Butterfly Environment"></a>Set Butterfly Environment</h2><p>version 5.2.2<br><a href="https://ouoholly.github.io/post/build-github-hexo-butterfly-record/#%E6%90%AD%E5%BB%BA%E6%AD%A5%E9%A9%9F">參考連結</a><br><a href="https://github.com/jerryc127/hexo-theme-butterfly/tree/5.1.0">參考連結</a></p><h2 id="Use-Search-in-Blog"><a href="#Use-Search-in-Blog" class="headerlink" title="Use Search in Blog"></a>Use Search in Blog</h2><p>note: 用太新的 Butterfly Theme 會出錯</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改: _config.butterfly.yml</span></span><br><span class="line">search:</span><br><span class="line">  <span class="comment"># Choose: algolia_search / local_search / docsearch</span></span><br><span class="line">  <span class="comment"># leave it empty if you don&#x27;t need search</span></span><br><span class="line">  use: local_search</span><br><span class="line">  placeholder: </span><br></pre></td></tr></table></figure><p><a href="https://blog.ac2g.com/post/51677.html">參考連結</a></p><h2 id="Music-in-Blog"><a href="#Music-in-Blog" class="headerlink" title="Music in Blog"></a>Music in Blog</h2><h3 id="Netease-Api"><a href="#Netease-Api" class="headerlink" title="Netease Api"></a>Netease Api</h3><p><a href="https://music.163.com/">Netease Music</a><br><a href="https://blog.csdn.net/qq_41467882/article/details/124734598">參考連結</a><br><a href="https://butterfly.js.org/posts/507c070f/">參考連結</a></p><h3 id="Local"><a href="#Local" class="headerlink" title="Local"></a>Local</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># _config.butterfly.yml</span></span><br><span class="line">aplayerInject:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  per_page: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">pjax:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Exclude the specified pages from pjax, such as &#x27;/music/&#x27;</span></span><br><span class="line">  exclude:</span><br><span class="line">    - /music/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># _config.yml</span></span><br><span class="line">aplayer:</span><br><span class="line">  meting: <span class="literal">true</span></span><br><span class="line">  asset_inject: <span class="literal">true</span> <span class="comment"># 造成點選頁面的 music 會重整頁面</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># /music/index.md</span></span><br><span class="line">&#123;% aplayerlist %&#125;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;narrow&quot;</span>: <span class="literal">false</span>,                          </span><br><span class="line">    <span class="string">&quot;autoplay&quot;</span>: <span class="literal">true</span>,                         </span><br><span class="line">    <span class="string">&quot;mode&quot;</span>: <span class="string">&quot;random&quot;</span>,                         </span><br><span class="line">    <span class="string">&quot;showlrc&quot;</span>: 3,                             </span><br><span class="line">    <span class="string">&quot;mutex&quot;</span>: <span class="literal">false</span>,                            </span><br><span class="line">    <span class="string">&quot;theme&quot;</span>: <span class="string">&quot;#e6d0b2&quot;</span>,                      </span><br><span class="line">    <span class="string">&quot;preload&quot;</span>: <span class="string">&quot;metadata&quot;</span>,                    </span><br><span class="line">    <span class="string">&quot;listmaxheight&quot;</span>: <span class="string">&quot;513px&quot;</span>,                </span><br><span class="line">    <span class="string">&quot;music&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;title&quot;</span>: <span class="string">&quot;千年血戰op&quot;</span>,</span><br><span class="line">            <span class="string">&quot;author&quot;</span>: <span class="string">&quot;キタニタツヤ&quot;</span>,</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://github.com/yuemusic0211/music/raw/refs/heads/main/%E6%AD%BB%E7%A5%9E/%E5%8D%83%E5%B9%B4%E8%A1%80%E6%88%B0op.mp3&quot;</span>,</span><br><span class="line">            <span class="string">&quot;pic&quot;</span>: <span class="string">&quot;https://github.com/yuemusic0211/music/blob/main/picture/%E3%82%AD%E3%82%BF%E3%83%8B%E3%82%BF%E3%83%84%E3%83%A4.jpg?raw=true&quot;</span>,</span><br><span class="line">            <span class="string">&quot;lrc&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">&#123;% endaplayerlist %&#125;</span><br></pre></td></tr></table></figure><ul><li>picture url 可以去 kkbox 複製圖片網址(關鍵字: 歌名 + kkbox)<br><a href="https://y2mate.nu/en-BitW/">yt轉mp3</a><br><a href="https://github.com/yuemusic0211/music/tree/main">音樂存放位置</a></li></ul><h2 id="Comments-in-Blog"><a href="#Comments-in-Blog" class="headerlink" title="Comments in Blog"></a>Comments in Blog</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">comments:</span><br><span class="line">  use: </span><br><span class="line">    - Gitalk</span><br><span class="line"><span class="comment"># 記得寫這個</span></span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/qq_33384402/article/details/107200465">參考連結</a></p><h2 id="custom-loading-page"><a href="#custom-loading-page" class="headerlink" title="custom loading page"></a>custom loading page</h2><ol><li>此 butterfly 版本沒有 loading.pug, 而是變成 fullpage-loading.pug。</li><li>script 也被包在 fullpage-loading.pug。</li><li>default 的部分也要記得設定。</li><li>layout.pug 要寫成 bash 那樣。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> theme.preloader.enable</span><br><span class="line">      !=partial(<span class="string">&#x27;includes/loading/fullpage-loading&#x27;</span>, &#123;&#125;, &#123;cache: <span class="literal">true</span>&#125;)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      !=partial(<span class="string">&#x27;includes/loading/index&#x27;</span>, &#123;&#125;, &#123;cache: <span class="literal">true</span>&#125;)</span><br></pre></td></tr></table></figure><a href="https://blog.meta-code.top/2022/06/18/2022-73/#%E4%B8%80%E3%80%81%E4%BF%AE%E6%94%B9loading-pug">參考連結</a></li></ol><h2 id="SEO搜索引擎优化"><a href="#SEO搜索引擎优化" class="headerlink" title="SEO搜索引擎优化"></a>SEO搜索引擎优化</h2><ol><li>SEO (Search Engine Optimization)，是指搜尋引擎優化。SEO 就是可以提升網站排名的所有方法的總稱，SEO 用於確保網站及其内容在搜尋引擎頁面（SERP）上的可見性。查看部落格，是否被收錄，搜尋以下<code>site: https://yue0211.github.io/</code>，若未被搜尋引擎收錄，则需進行配置。</li><li>輸入以下指令:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure></li><li>進入 <a href="https://search.google.com/search-console/about">google 搜索控制台</a>，登入部落格網址。</li><li>選擇<code>html文件驗證</code>，將下載文件放在<code>source</code>下。在 _config.yml 中，加入忽略編譯的文件，如下：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">skip_render:</span><br><span class="line">- googlexxxxxxx.html</span><br></pre></td></tr></table></figure>然後 push 到 github，再點擊驗證，需等待一段時間才會成功。</li><li>驗證成功後可將 googlexxxxxxx.html 刪除。</li><li>點擊 google 搜索控制台，左側的 sitemap，加入路徑 : <code>https://yue0211.github.io/sitemap.xml</code>，狀態會是無法擷取。</li><li>設定 _config.yml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo sitemap (google 搜尋引擎)</span></span><br><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br></pre></td></tr></table></figure></li><li>設定 _config.butterfly.yml，設定完後網頁的 head 會多一個 meta google-site-verification<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">site_verification:</span><br><span class="line">  - name: google-site-verification</span><br><span class="line">    content: xxxxxxxx  <span class="comment"># 需去 google 搜索控制台查詢</span></span><br></pre></td></tr></table></figure></li><li>需等待數天才會顯示成功。<br><a href="https://fuhailin.github.io/Hexo-SEO/">參考連結</a><br><a href="https://kentdoit.github.io/hexo/2629412870/">參考連結</a><br><a href="https://kentdoit.github.io/hexo/3578178281/">參考連結</a></li></ol><h2 id="Detail-Setting-in-Blog"><a href="#Detail-Setting-in-Blog" class="headerlink" title="Detail Setting in Blog"></a>Detail Setting in Blog</h2><p><a href="https://butterfly.js.org/posts/4aa8abbe/">參考連結</a></p><h2 id="Hexo-常用指令"><a href="#Hexo-常用指令" class="headerlink" title="Hexo 常用指令"></a>Hexo 常用指令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hexo clean   <span class="comment"># cleans the cache file (db.json) and generated files (public)</span></span><br><span class="line">hexo g       <span class="comment"># generate static files</span></span><br><span class="line">hexo s       <span class="comment"># starts a local server</span></span><br><span class="line">hexo d       <span class="comment"># deplay to github</span></span><br><span class="line">hexo g -d    <span class="comment"># deploy after generation finishes</span></span><br><span class="line">hexo g -d -m <span class="string">&quot;message&quot;</span></span><br><span class="line">hexo new &lt;post-title&gt;       <span class="comment"># create new post</span></span><br><span class="line">hexo new page &lt;page-title&gt;  <span class="comment"># create new page</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> install </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
